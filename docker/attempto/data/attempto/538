type:propername
words:AceWiki_0-5-2;AceWiki_0-5-2;AceWiki_0-5-2;AceWiki_0-5-2;
# <538,3> is a <193,0> that is a <194,0> <63,3> .
c Download: https://github.com/downloads/AceWiki/AceWiki/acewiki-0.5.2.zip
| <538,3> <474,0> which <473,1> ?
c Changelog:~n- The AceWiki repository moved from Launchpad to GitHub, and thereby from Bazaar to Git.~n- The package structure has changed, with several new packages. See README.md for the details.~n- There is a new interface that enables the use of other predictive parsers besides the Codeco~n  chart-parser.~n- Redesign of the engine/language interfaces to support multilinguality: AceWikiEngine is the main~n  interface (language-independent). LanguageHandler is the interface for language-specific~n  behavior.~n- Experimental GF engine as an alternative to the ACE-OWL engine: It uses GF (Grammatical~n  Framework) to allow for automatic translations into other languages. The current prototype uses~n  a very simple "Foods" grammar for English, German and Italian. The GF engine is in a very early~n  stage of development and very buggy. Reasoning is not supported at the moment.~n- AceWiki applications can now be split into backends and frontends: Multiple frontends can connect~n  to the same backend, i.e. to the same ontology. See web.xml for the details.~n- jpl.jar (Java binding for SWI Prolog) is no longer part of the AceWiki package. Instead, AceWiki~n  needs to directly access the library of the given SWI Prolog installation with a Java argument of~n  the form "-Djava.library.path=/path/to/swipl/" pointing to the location of jpl.jar.~n- New AceWiki data format (for export/import): The new format includes IDs and links of the form~n  "<element-id,word-id>". It now corresponds to the internal format of the file-based storage, is~n  more general, and should be more stable. The old format is still supported for the time being.~n- The ACE parser (APE) can now be connected in three different ways: "local" (via jpl.jar),~n  "socket" or "webservice".~n- Internal refactoring, clean-up, and improvements (concerning serialization, manager/engine~n  classes, chart-parser interface, and more)~n- Simplification of ontology classes~n- More minor bug-fixes, improvements, refactoring, and clean-up
